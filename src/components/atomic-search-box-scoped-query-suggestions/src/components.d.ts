/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    /**
     * The `atomic-search-box-query-suggestions` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of query suggestion behavior.
     */
    interface AtomicSearchBoxScopedQuerySuggestions {
        /**
          * The field by which suggestions will be provided.
         */
        "field"?: string;
        /**
          * The SVG icon to display.  - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location. - Use a value that starts with `assets://`, to display an icon from the Atomic package. - Use a stringified SVG to display it directly.
         */
        "icon"?: string;
        /**
          * The maximum number of suggestions that will be displayed if the user has typed something into the input field.
         */
        "maxWithQuery"?: number;
        /**
          * The maximum number of suggestions that will be displayed initially when the input field is empty.
         */
        "maxWithoutQuery"?: number;
    }
}
declare global {
    /**
     * The `atomic-search-box-query-suggestions` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of query suggestion behavior.
     */
    interface HTMLAtomicSearchBoxScopedQuerySuggestionsElement extends Components.AtomicSearchBoxScopedQuerySuggestions, HTMLStencilElement {
    }
    var HTMLAtomicSearchBoxScopedQuerySuggestionsElement: {
        prototype: HTMLAtomicSearchBoxScopedQuerySuggestionsElement;
        new (): HTMLAtomicSearchBoxScopedQuerySuggestionsElement;
    };
    interface HTMLElementTagNameMap {
        "atomic-search-box-scoped-query-suggestions": HTMLAtomicSearchBoxScopedQuerySuggestionsElement;
    }
}
declare namespace LocalJSX {
    /**
     * The `atomic-search-box-query-suggestions` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of query suggestion behavior.
     */
    interface AtomicSearchBoxScopedQuerySuggestions {
        /**
          * The field by which suggestions will be provided.
         */
        "field"?: string;
        /**
          * The SVG icon to display.  - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location. - Use a value that starts with `assets://`, to display an icon from the Atomic package. - Use a stringified SVG to display it directly.
         */
        "icon"?: string;
        /**
          * The maximum number of suggestions that will be displayed if the user has typed something into the input field.
         */
        "maxWithQuery"?: number;
        /**
          * The maximum number of suggestions that will be displayed initially when the input field is empty.
         */
        "maxWithoutQuery"?: number;
    }
    interface IntrinsicElements {
        "atomic-search-box-scoped-query-suggestions": AtomicSearchBoxScopedQuerySuggestions;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            /**
             * The `atomic-search-box-query-suggestions` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of query suggestion behavior.
             */
            "atomic-search-box-scoped-query-suggestions": LocalJSX.AtomicSearchBoxScopedQuerySuggestions & JSXBase.HTMLAttributes<HTMLAtomicSearchBoxScopedQuerySuggestionsElement>;
        }
    }
}
